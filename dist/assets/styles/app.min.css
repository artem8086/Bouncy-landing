/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700");
@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro:300");
@import url("https://fonts.googleapis.com/css?family=Roboto:300");
@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro");
@font-face {
  font-family: 'Pe-icon-7-stroke';
  src: url("../fonts/Pe-icon-7-stroke.eot?d7yf1v");
  src: url("../fonts/Pe-icon-7-stroke.eot?#iefixd7yf1v") format('embedded-opentype'), url("../fonts/Pe-icon-7-stroke.woff?d7yf1v") format('woff'), url("../fonts/Pe-icon-7-stroke.ttf?d7yf1v") format('truetype'), url("../fonts/Pe-icon-7-stroke.svg?d7yf1v#Pe-icon-7-stroke") format('svg');
  font-weight: normal;
  font-style: normal;
}
* {
  margin: 0;
  padding: 0;
  font: inherit;
  box-sizing: border-box;
}
h2 {
  color: #333b46;
  font-family: "Source Sans Pro", sans-serif;
  font-weight: 300;
  line-height: 12px;
  letter-spacing: 4px;
  text-transform: uppercase;
}
span {
  color: #81868e;
  font-size: 14px;
  line-height: 25px;
  letter-spacing: 0.7px;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
html {
  font-family: "Open Sans", sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-focus-ring-color: rgba(255,255,255,0);
  cursor: default;
}
body {
  font-size: 100%;
  line-height: 1;
  color: #fff;
  overflow-x: hidden;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
a {
  background: transparent;
}
*:focus,
*:active,
*:hover {
  outline: none;
}
hr {
  box-sizing: content-box;
  height: 0;
}
ol,
ul {
  list-style: none;
}
pre {
  -moz-tab-size: 4;
       tab-size: 4;
  white-space: pre-wrap;
}
q {
  quotes: '\201C' '\201D' '\2018' '\2019';
}
img {
  border: none;
}
svg:not(:root) {
  overflow: hidden;
}
button,
input {
  line-height: normal;
}
button,
select {
  text-transform: none;
}
button {
  overflow: visible;
}
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}
input[type='search'] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: none;
  padding: 0;
}
textarea {
  overflow: auto;
  vertical-align: top;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
input,
select,
textarea {
  border-radius: 0;
  box-shadow: none;
}
input,
textarea {
  resize: none;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}
[placeholder]:focus::-webkit-input-placeholder {
  color: transparent;
}
[placeholder]:focus::-moz-placeholder {
  color: transparent;
}
[placeholder]:focus:-ms-input-placeholder {
  color: transparent;
}
[placeholder]:focus::placeholder {
  color: transparent;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
.button {
  display: inline-block;
  border: 1px solid #333b46;
  border-radius: 18px;
  font-size: 16px;
  line-height: 12px;
  color: #333b46;
  padding: 12px 30px;
}
.button:hover {
  text-decoration: none;
  color: #333b46;
}
.before,
.main-head::before {
  content: '';
  display: block;
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}
.main-head {
  overflow: hidden;
  position: relative;
  display: block;
  width: 100%;
  height: 100vh;
  min-height: 620px;
  padding: 45px 0 78px;
  background-size: cover;
  background-position: center;
}
.main-head::before {
  background-color: #000;
  opacity: 0.5;
}
.main-head .container {
  z-index: 1;
}
.top-line__logo {
  padding: 0;
  vertical-align: middle;
  display: inline-block;
  font-family: "Big John";
  font-size: 25px;
  text-transform: uppercase;
}
.top-nav {
  display: inline-block;
  padding: 0;
  text-align: right;
}
.top-nav__link {
  padding: 3px 12px;
  vertical-align: middle;
  color: #fff;
  text-align: center;
  font-size: 16px;
}
.top-nav__link:hover {
  text-decoration: none;
  color: #333b46;
}
.top-nav__link_active {
  border: 1px solid #fff;
  border-radius: 14px;
}
.top-nav__link_active:hover {
  border-color: #333b46;
}
.main-content__header-text {
  padding-bottom: 16px;
  text-align: center;
  text-transform: uppercase;
  font-family: "Source Sans Pro", sans-serif;
  font-size: 35px;
  font-weight: 300;
  letter-spacing: 7px;
}
.main-content__content-text {
  padding: 0;
  text-align: center;
  font-size: 16px;
  line-height: 28px;
}
.bot-line__slider {
  width: 36px;
  height: 36px;
  background-color: #19bd9a;
  border-radius: 50%;
}
.bot-line__slider::after {
  width: 100%;
  height: 100%;
  text-align: center;
  vertical-align: middle;
  content: 'îš„';
  transform-origin: center;
  transform: rotate(90deg) translateY(2px);
  font-size: 30px;
  display: block;
  font-family: 'Pe-icon-7-stroke';
  color: #fff;
}
.bot-line__slider:hover {
  background-color: #14b07a;
  text-decoration: none;
}
.section1 {
  display: block;
  background-color: #fff;
  padding: 80px 0 57px;
}
.sec1-left {
  padding-bottom: 27px;
}
.sec1-left__header {
  padding-bottom: 48px;
  font-size: 28px;
}
.sec1-left__desc {
  display: block;
  padding-bottom: 32px;
}
.section2 {
  display: block;
  background-color: #f3f3f3;
  padding: 80px 0 100px;
}
.section2__header {
  text-align: center;
  font-size: 20px;
  padding-bottom: 40px;
}
.section2__desc {
  padding-bottom: 60px;
  text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
